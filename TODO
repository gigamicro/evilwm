# evilwm TODO

## Simpler tasks

send-to-desktop

'TODO:'
'XXX'
evilwm.html

ability to disable focus-keeping on root window?

rmb+- click+drag,click- -> move + resize?

func_spawn: configurable array of commands to run indexed by FL_VALUEMASK?

FL_boundary('bound'?)/limit('lim')/etc flag
FL_BOTTOM=FL_this|FL_DOWN
move,rel+(this)+left -> c.x = c.x - (c.bw*2? + c.width) etc

bind for dock visibility only while held
bind for other things while held?
key release binds

use getpointer for drag/sweep? wouldn't have to grab
but when would it poll lol

allow func_info bind to work on screens/rootwindow?
maybe add vdesk id

show info also makes the window disappear?
click-through?

some kind of bind to toggle mouse focus
or mouse existence at all
maybe trap mouse in current window unless alt is held?

mouse binds on root window

drag/drop target on root window?
(handle multiple-element)

generate helptext with options list, default values as calculated, and description list

figure out modvdesks incomplete cases eg num=8 mod=7,9,-1,6

bring forward/backward based on overlapping visible windows only

unmaximize windows to pointer (same logic as placement)

## Intermediate tasks


RandR-based multi-monitor support has now been implemented, but it would be
nice if, when a client is moved due to removing a monitor, it could be moved
back to its original position if the _same_ monitor is reattached.  Whether a
monitor is the "same" is probably just down to whether it occupies the same
geometry on the screen.

eg
screen 100x200  window 1x1+98+198
screen 100x100  window 1x1+98+98
screen 200x100  window 1x1+98+98
screen 200x200  window 1x1+98+198

also!
screen 100x200  window 1x1+98+198
screen 100x200  window 100x100+100+0 (max)
screen 100x100  window 100x100 (max)
screen 100x100  window 1x1+98+198 -> wrong


what about making the list type something with trivial removal (iterators just skip null values) and append/prepend?
periodically reallocated array?
linkedlist with final null-null element?
linkedlist with pointers from data?
... 3x doubly linked list in struct client?
